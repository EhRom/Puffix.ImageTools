name: Build and package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  PACKAGE_VERSION: 1.0.0
  APP_NAME: Puffix.ImageTools

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
  
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build
      run: dotnet build ./Puffix.ImageTools/Puffix.ImageTools.csproj --configuration 'Release'
      
    - name: Publish for Linux
      run: |
        dotnet publish ./Puffix.ImageTools/Puffix.ImageTools.csproj --runtime linux-x64 --self-contained true --output './out/linux-x64'

    - name: Publish for Windows
      run: |
        dotnet publish ./Puffix.ImageTools/Puffix.ImageTools.csproj --runtime win-x64 --self-contained true --output './out/win-x64'

    - name: Package
      working-directory: './out/'
      run: |
        mkdir "../${{ env.APP_NAME }}-${{ env.PACKAGE_VERSION }}/"

        7z a linux-x64 ./linux-x64/*
        zip -r linux-x64.zip linux-x64 -x ./linux-x64/*

        cp -a ./out/linux-x64.* ../${{ env.APP_NAME }}-${{ env.PACKAGE_VERSION }}/linux-x64/

        7z a win-x64 ./win-x64/*
        zip -r win-x64.zip win-x64 -x ./win-x64/*

        cp -a ./out/win-x64.* ../${{ env.APP_NAME }}-${{ env.PACKAGE_VERSION }}/win-x64/
    
    - name: Upload
      uses: actions/upload-artifact@v4
      with: 
        name: ${{ env.APP_NAME }}-${{ env.PACKAGE_VERSION }}
        path: '${{ env.APP_NAME }}-${{ env.PACKAGE_VERSION }}'

    - name: Create release
      env:
        GH_TOKEN: ${{ secrets.PFX_IMAGES_GH_CLI_TOKEN }}
      run: |
        gh release create v0.0.3 --target main --generate-notes --draft --latest=false ${{ env.APP_NAME }}-${{ env.PACKAGE_VERSION }}/*-x64.*

     