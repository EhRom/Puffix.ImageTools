name: Build and package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  PACKAGE_VERSION: 1.0.0
  APP_NAME: Puffix.ImageTools

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
  
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build
      run: dotnet build ./Puffix.ImageTools/Puffix.ImageTools.csproj --configuration 'Release'
      
    - name: Publish
      run: dotnet publish ./Puffix.ImageTools/Puffix.ImageTools.csproj --runtime linux-x64 --self-contained true --output './out/linux-x64'
      
    - name: Publish
      run: dotnet publish ./Puffix.ImageTools/Puffix.ImageTools.csproj --runtime win-x64 --self-contained true --output './out/win-x64'

    - name: Package
      run: |
        mkdir "${{ env.APP_NAME }}-package/"
        
        cp -a ./out/linux-x64/. ${{ env.APP_NAME }}-package/linux-x64/
        cp -a ./out/win-x64/. ${{ env.APP_NAME }}-package/win-x64/

        ls -R ${{ env.APP_NAME }}-package

    - name: Upload
      uses: actions/upload-artifact@v4
      with: 
        name: ${{ env.APP_NAME }}-package
        path: '${{ env.APP_NAME }}-package'
        
  # build-windows:

  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v4
  
  #   - name: Setup .NET Core
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}

  #   - name: Build
  #     run: dotnet build ./Puffix.ImageTools/Puffix.ImageTools.csproj --configuration 'Release'

  #   - name: Publish
  #     run: dotnet publish ./Puffix.ImageTools/Puffix.ImageTools.csproj --runtime linux-x64 --self-contained true --output './out/linux-x64'
      
  #   - name: Publish
  #     run: dotnet publish ./Puffix.ImageTools/Puffix.ImageTools.csproj --runtime win-x64 --self-contained true --output './out/win-x64'
      
  #   - name: Package
  #     run: |
  #       md "${{ env.APP_NAME }}-package/"
        
  #       cp /y ./out/* ${{ env.APP_NAME }}-package/
        
  #   - name: Upload
  #     uses: actions/upload-artifact@v4
  #     with: 
  #       name: ${{ env.APP_NAME }}-package-win
  #       path: '.\${{ env.APP_NAME }}-package-win'

